--- a/net/minecraft/world/level/block/RedStoneWireBlock.java
+++ b/net/minecraft/world/level/block/RedStoneWireBlock.java
@@ -292,7 +_,7 @@
 
     // Paper start - Optimize redstone (Eigencraft)
     // The bulk of the new functionality is found in RedstoneWireTurbo.java
-    io.papermc.paper.redstone.RedstoneWireTurbo turbo = new io.papermc.paper.redstone.RedstoneWireTurbo(this);
+    //io.papermc.paper.redstone.RedstoneWireTurbo turbo = new io.papermc.paper.redstone.RedstoneWireTurbo(this); // Octopus
 
     /*
      * Modified version of pre-existing updateSurroundingRedstone, which is called from
@@ -308,8 +_,8 @@
             if (orientation != null) {
                 source = pos.relative(orientation.getFront().getOpposite());
             }
-            turbo.updateSurroundingRedstone(worldIn, pos, state, source);
-            return;
+            //worldIn.turbo.updateSurroundingRedstone(worldIn, pos, state, source); // Octopus
+            //return; // Octopus
         }
         updatePowerStrength(worldIn, pos, state, orientation, blockAdded);
     }
@@ -335,9 +_,11 @@
                 state = state.setValue(POWER, newPower);
                 // [Space Walker] suppress shape updates and emit those manually to
                 // bypass the new neighbor update stack.
-                if (level.setBlock(pos, state, Block.UPDATE_KNOWN_SHAPE | Block.UPDATE_CLIENTS)) {
+                // Octopus start
+                /*if (level.setBlock(pos, state, Block.UPDATE_KNOWN_SHAPE | Block.UPDATE_CLIENTS)) {
                     turbo.updateNeighborShapes(level, pos, state);
-                }
+                }*/
+                // Octopus end
             }
         }
         return state;
@@ -373,7 +_,7 @@
     protected void onPlace(BlockState state, Level level, BlockPos pos, BlockState oldState, boolean isMoving) {
         if (!oldState.is(state.getBlock()) && !level.isClientSide) {
             // Paper start - optimize redstone - replace call to updatePowerStrength
-            if (level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) {
+            if (false && level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) { // Octopus
                 level.getWireHandler().onWireAdded(pos, state); // Alternate Current
             } else {
                 this.updateSurroundingRedstone(level, pos, state, null, true); // Vanilla/Eigencraft
@@ -398,7 +_,7 @@
                 }
 
                 // Paper start - optimize redstone - replace call to updatePowerStrength
-                if (level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) {
+                if (false && level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) { // Octopus
                     level.getWireHandler().onWireRemoved(pos, state); // Alternate Current
                 } else {
                     this.updateSurroundingRedstone(level, pos, state, null, false); // Vanilla/Eigencraft
@@ -429,7 +_,7 @@
         if (!level.isClientSide) {
             // Paper start - optimize redstone (Alternate Current)
             // Alternate Current handles breaking of redstone wires in the WireHandler.
-            if (level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) {
+            if (false && level.paperConfig().misc.redstoneImplementation == io.papermc.paper.configuration.WorldConfiguration.Misc.RedstoneImplementation.ALTERNATE_CURRENT) { // Octopus
                 level.getWireHandler().onWireUpdated(pos, state, orientation);
             } else
                 // Paper end - optimize redstone (Alternate Current)
