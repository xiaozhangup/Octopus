--- a/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.entity.projectile;
 
 import java.util.UUID;
+import java.util.function.Consumer;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.SectionPos;
@@ -22,10 +_,14 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.portal.TeleportTransition;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.EntityRemoveEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
 
 public class ThrownEnderpearl extends ThrowableItemProjectile {
     private long ticketTimer = 0L;
@@ -126,54 +_,70 @@
                 Vec3 vec3 = this.oldPosition();
                 if (owner instanceof ServerPlayer serverPlayer) {
                     if (serverPlayer.connection.isAcceptingMessages()) {
+                        // Octopus start
+                        final boolean shouldSpawnEnderMite = this.random.nextFloat() < 0.05F && serverLevel.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING);
+                        Consumer<Entity> callback = rawEntity -> {
+                            if (rawEntity == null) {
+                                return; // Skip for teleport failed or canceled
+                            }
+
+                            final ServerPlayer serverPlayer1 = ((ServerPlayer) rawEntity);
+
+                            // Ender mite spawn logics
+                            if (shouldSpawnEnderMite) {
+                                Endermite endermite = EntityType.ENDERMITE.create(serverLevel, EntitySpawnReason.TRIGGERED);
+                                if (endermite != null) {
+                                    endermite.moveTo(owner.getX(), owner.getY(), owner.getZ(), owner.getYRot(), owner.getXRot());
+                                    serverLevel.addFreshEntity(endermite, CreatureSpawnEvent.SpawnReason.ENDER_PEARL);
+                                }
+                            }
+
+                            // Player post teleport logics
+                            if (this.isOnPortalCooldown()) {
+                                owner.setPortalCooldown();
+                            }
+
+                            if (serverPlayer1 != null) {
+                                serverPlayer1.resetFallDistance();
+                                serverPlayer1.resetCurrentImpulseContext();
+                                serverPlayer1.hurtServer(serverPlayer.serverLevel(), this.damageSources().enderPearl().eventEntityDamager(this), 5.0F); // CraftBukkit // Paper - fix DamageSource API
+                            }
+
+                            // Play sounds
+                            this.playSound(serverLevel, vec3);
+                        };
+                        // Octopus end
                         // CraftBukkit start
-                        ServerPlayer serverPlayer1 = serverPlayer.teleport(new TeleportTransition(serverLevel, vec3, Vec3.ZERO, 0.0F, 0.0F, Relative.union(Relative.ROTATION, Relative.DELTA), TeleportTransition.DO_NOTHING, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.ENDER_PEARL));
-                        if (serverPlayer1 == null) {
-                            this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.HIT);
+                        final ServerPlayer teleported = serverPlayer.teleport(new TeleportTransition(serverLevel, vec3, Vec3.ZERO, 0.0F, 0.0F, Relative.union(Relative.ROTATION, Relative.DELTA), TeleportTransition.DO_NOTHING, PlayerTeleportEvent.TeleportCause.ENDER_PEARL), callback); // Octopus
+                        if (teleported == null) { // We just only check if it teleported successfully
+                            this.discard(EntityRemoveEvent.Cause.HIT); // Discard anyway
                             return;
                         }
                         // CraftBukkit end
-                        if (this.random.nextFloat() < 0.05F && serverLevel.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
-                            Endermite endermite = EntityType.ENDERMITE.create(serverLevel, EntitySpawnReason.TRIGGERED);
-                            if (endermite != null) {
-                                endermite.moveTo(owner.getX(), owner.getY(), owner.getZ(), owner.getYRot(), owner.getXRot());
-                                serverLevel.addFreshEntity(endermite, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.ENDER_PEARL);
-                            }
-                        }
-
-                        if (this.isOnPortalCooldown()) {
-                            owner.setPortalCooldown();
-                        }
-
-                        // CraftBukkit start - moved up
-                        // ServerPlayer serverPlayer1 = serverPlayer.teleport(
-                        //     new TeleportTransition(
-                        //         serverLevel, vec3, Vec3.ZERO, 0.0F, 0.0F, Relative.union(Relative.ROTATION, Relative.DELTA), TeleportTransition.DO_NOTHING
-                        //     )
-                        // );
-                        // CraftBukkit end - moved up
-                        if (serverPlayer1 != null) {
-                            serverPlayer1.resetFallDistance();
-                            serverPlayer1.resetCurrentImpulseContext();
-                            serverPlayer1.hurtServer(serverPlayer.serverLevel(), this.damageSources().enderPearl().eventEntityDamager(this), 5.0F); // CraftBukkit // Paper - fix DamageSource API
-                        }
-
-                        this.playSound(serverLevel, vec3);
                     }
                 } else {
-                    Entity entity = owner.teleport(
-                        new TeleportTransition(serverLevel, vec3, owner.getDeltaMovement(), owner.getYRot(), owner.getXRot(), TeleportTransition.DO_NOTHING)
+                    owner.teleport(
+                        new TeleportTransition(serverLevel, vec3, owner.getDeltaMovement(), owner.getYRot(), owner.getXRot(), TeleportTransition.DO_NOTHING), // Octopus
+                        teleported -> { // Octopus start
+                            // Check if it is teleported successfully
+                            if (teleported == null) {
+                                // Play sounds anyway
+                                this.playSound(serverLevel, vec3);
+                                return;
+                            }
+
+                            // Post teleport logics
+                            teleported.resetFallDistance();
+
+                            // Play sounds
+                            this.playSound(serverLevel, vec3);
+                        } // Octopus end
                     );
-                    if (entity != null) {
-                        entity.resetFallDistance();
-                    }
-
-                    this.playSound(serverLevel, vec3);
                 }
 
-                this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
+                this.discard(EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
             } else {
-                this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
+                this.discard(EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
             }
         }
     }
@@ -194,7 +_,7 @@
         if (owner instanceof ServerPlayer serverPlayer
             && !owner.isAlive()
             && serverPlayer.serverLevel().getGameRules().getBoolean(GameRules.RULE_ENDER_PEARLS_VANISH_ON_DEATH)) {
-            this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
+            this.discard(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
         } else {
             super.tick();
         }
@@ -218,18 +_,23 @@
 
     @Nullable
     @Override
-    public Entity teleport(TeleportTransition teleportTransition) {
-        Entity entity = super.teleport(teleportTransition);
-        if (entity != null) {
-            if (!this.level().paperConfig().misc.legacyEnderPearlBehavior) entity.placePortalTicket(BlockPos.containing(entity.position())); // Paper - Allow using old ender pearl behavior
-        }
+    public Entity teleport(TeleportTransition teleportTransition, Consumer<Entity> callback) { // Octopus
+        // Octopus start
+        return super.teleport(teleportTransition, teleported -> {
+            // Post teleport logics
+            // Paper - Allow using old ender pearl behavior
+            if (teleported != null) {
+                if (!this.level().paperConfig().misc.legacyEnderPearlBehavior) teleported.placePortalTicket(BlockPos.containing(teleported.position())); // Paper - Allow using old ender pearl behavior
+            }
 
-        return entity;
+            if (callback != null) callback.accept(teleported);
+        });
+        // Octopus end
     }
 
     @Override
     public boolean canTeleport(Level fromLevel, Level toLevel) {
-        return fromLevel.getTypeKey() == net.minecraft.world.level.dimension.LevelStem.END && toLevel.getTypeKey() == net.minecraft.world.level.dimension.LevelStem.OVERWORLD && this.getOwner() instanceof ServerPlayer serverPlayer // CraftBukkit
+        return fromLevel.getTypeKey() == LevelStem.END && toLevel.getTypeKey() == LevelStem.OVERWORLD && this.getOwner() instanceof ServerPlayer serverPlayer // CraftBukkit
             ? super.canTeleport(fromLevel, toLevel) && serverPlayer.seenCredits
             : super.canTeleport(fromLevel, toLevel);
     }
@@ -243,8 +_,8 @@
     }
 
     @Override
-    public void onRemoval(Entity.RemovalReason reason) {
-        if (reason != Entity.RemovalReason.UNLOADED_WITH_PLAYER) {
+    public void onRemoval(RemovalReason reason) {
+        if (reason != RemovalReason.UNLOADED_WITH_PLAYER) {
             this.deregisterFromCurrentOwner();
         }
 
