From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: xiaozhangup <xiaozhangshiw@163.com>
Date: Sat, 9 Aug 2025 12:45:28 +0800
Subject: [PATCH] Redundant move packet optimization


diff --git a/net/minecraft/server/level/ServerEntity.java b/net/minecraft/server/level/ServerEntity.java
index e96d4dee14c05f2fa329bfb1588ec795d4e3d730..96e82f446d331bb04ffd5e9ad9047afc6b846a09 100644
--- a/net/minecraft/server/level/ServerEntity.java
+++ b/net/minecraft/server/level/ServerEntity.java
@@ -193,19 +193,25 @@ public class ServerEntity {
                     packet = ClientboundEntityPositionSyncPacket.of(this.entity);
                     flag3 = true;
                     flag4 = true;
-                } else if ((!flag2 || !flag) && !(this.entity instanceof AbstractArrow)) {
-                    if (flag2) {
-                        packet = new ClientboundMoveEntityPacket.Pos(this.entity.getId(), (short)l, (short)l1, (short)l2, this.entity.onGround());
-                        flag3 = true;
-                    } else if (flag) {
-                        packet = new ClientboundMoveEntityPacket.Rot(this.entity.getId(), b, b1, this.entity.onGround());
-                        flag4 = true;
-                    }
+                // Gale start - Airplane - better checking for useless move packets
                 } else {
-                    packet = new ClientboundMoveEntityPacket.PosRot(this.entity.getId(), (short)l, (short)l1, (short)l2, b, b1, this.entity.onGround());
-                    flag3 = true;
-                    flag4 = true;
+                    if (flag2 || flag || this.entity instanceof AbstractArrow) {
+                        if ((!flag2 || !flag) && !(this.entity instanceof AbstractArrow)) {
+                            if (flag2) {
+                                packet = new ClientboundMoveEntityPacket.Pos(this.entity.getId(), (short) l, (short) l1, (short) l2, this.entity.onGround());
+                                flag3 = true;
+                            } else if (flag) {
+                                packet = new ClientboundMoveEntityPacket.Rot(this.entity.getId(), b, b1, this.entity.onGround());
+                                flag4 = true;
+                            }
+                        } else {
+                            packet = new ClientboundMoveEntityPacket.PosRot(this.entity.getId(), (short) l, (short) l1, (short) l2, b, b1, this.entity.onGround());
+                            flag3 = true;
+                            flag4 = true;
+                        }
+                    }
                 }
+                // Gale end - Airplane - better checking for useless move packets
 
                 if (this.entity.hasImpulse || this.trackDelta || this.entity instanceof LivingEntity && ((LivingEntity)this.entity).isFallFlying()) {
                     Vec3 deltaMovement = this.entity.getDeltaMovement();
diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 5b153979f1191f4c8d68713dc684c09020459830..0c682b8e9a09688dd25eec5c649e22fb10eca506 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -262,6 +262,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public float yRotO;
     public float xRotO;
     private AABB bb = INITIAL_AABB;
+    private boolean boundingBoxChanged = false; // Gale - VMP - skip entity move if movement is zero
     public boolean onGround;
     public boolean horizontalCollision;
     public boolean verticalCollision;
@@ -1092,6 +1093,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     // Paper end - detailed watchdog information
 
     public void move(MoverType type, Vec3 movement) {
+        // Gale start - VMP - skip entity move if movement is zero
+        if (!this.boundingBoxChanged && movement.equals(Vec3.ZERO)) {
+            return;
+        }
+        // Gale end - VMP - skip entity move if movement is zero
         final Vec3 originalMovement = movement; // Paper - Expose pre-collision velocity
         // Paper start - detailed watchdog information
         ca.spottedleaf.moonrise.common.util.TickThread.ensureTickThread("Cannot move an entity off-main");
@@ -4393,6 +4399,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
 
     public final void setBoundingBox(AABB bb) {
+        // Gale start - VMP - skip entity move if movement is zero
+        if (!this.bb.equals(bb)) {
+            this.boundingBoxChanged = true;
+        }
+        // Gale end - VMP - skip entity move if movement is zero
         // CraftBukkit start - block invalid bounding boxes
         double minX = bb.minX,
                 minY = bb.minY,
